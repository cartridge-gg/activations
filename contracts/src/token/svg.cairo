// SVG art generation for The Ronin's Pact NFTs
// This module contains all the SVG artwork and generation logic

use super::pact::TrialProgress;

// SVG Art Constants - Background
fn get_bg_svg() -> ByteArray {
    "<g clip-path=\"url(#clip0_1339_21)\"><path d=\"M1024.5 0H0.5V1024H1024.5V0Z\" fill=\"black\"/><path opacity=\"0.7\" d=\"M-310.082 289.052C-310.082 289.052 660.605 623.53 512.5 289.052C364.395 -45.4267 1335.08 289.052 1335.08 289.052V1464.16H-310.082L-310.082 289.052Z\" fill=\"url(#paint0_linear_1339_21)\"/></g><defs><linearGradient id=\"paint0_linear_1339_21\" x1=\"512.5\" y1=\"826.895\" x2=\"512.5\" y2=\"342.294\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#321CC4\"/><stop offset=\"1\" stop-color=\"#010101\"/></linearGradient><clipPath id=\"clip0_1339_21\"><rect width=\"1024\" height=\"1024\" fill=\"white\" transform=\"translate(0.5)\"/></clipPath></defs>"
}

// SVG Art Constants - Rack (weapon stand)
fn get_rack_svg() -> ByteArray {
    "<g transform=\"translate(220.5, 273.5)\"><defs><style>.st0{fill:#e9283a;}.st1{fill:#030001;}.st2{fill:#222;}</style></defs><g><path class=\"st0\" d=\"M442.08,447.35h-28c-.32,0-1.36-4.25-2.57-5.94-15.13-21.05-53.79-6.37-74.41-2.54-9.36,1.74-30.35,6.36-38.65,6.41-5.22.03-8.93-6.42-15.9.05l-88.97-16.05c-6.19.02-21.33,5.9-25.51,10.56-2.26,2.52-2.58,7.51-2.99,7.51h-28v-6.01c.99-1.01,18.95,2.06,23.29.8,2.66-.77,4.67-5.47,6.67-7.33,4.92-4.58,17.85-9.85,24.54-10.45,29.93,2.72,59.35,10.78,89.02,15.81,3.67.79,9.16-6.88,11.5-5.39,1.11.71,1.4,3.68,3.66,4.37,2.03.63,5.48.27,7.7.06,17.53-1.61,42.79-7.65,60.85-11.15,5.76-1.12,13.94-4.8,19.27-4.8s18.76,5,23.2,7.88c3.39,2.2,9.86,10.35,12.01,10.99,7.6,2.25,23.69-6.3,23.29,5.2Z\"/><path class=\"st0\" d=\"M442.08,375.36c-12.5.09-25.03-.12-37.55-.05-2.36.01-4.55,1.06-6.92,1.08-25.23.23-48.3-7.12-74-8.08-26.97-1.01-60.33-1.12-87.03,1.06-9.41.77-18.91,5.25-27.98,6.02-15.35,1.3-33.32-.39-49.08-.08-2.95.06-23.75,3.65-22.45-2.44.26-1.24,2.33-1.44,3.45-1.56,20.73-2.35,45.85,1.92,67.03.03,4.14-.37,8.38-2.21,12.29-2.71,69.65-9.01,138.16,2.9,207.77.77,6.6-.2,16.31-5.22,14.46,5.96Z\"/><path class=\"st0\" d=\"M314.08,386.35c2.82,2.89-6.4,9.88-10,8,1.12,2.04-1.28,7.7-1,7.99,1.73,1.78,2.33-2.45,3.6-2.86,2.08-.66,5.13.12,7.4-.14v6.43c-.21,1.49-9.4-.04-10.01.57-.54.54.79,13.05-.5,13.02-10.27-4.4-7.7-16.2-6.5-25.01-4.24,1.77-9.22,1.37-13.48-.02.26,9.55,3.83,21.01-7.51,25.01-.35-2,.46-12.54,0-13-.38-.38-7.42.28-9.01.01l-.02-6.43c3.52-1.61,7.37-.73,9.53,2.41-.7-1.65-.22-7.71-.51-7.98-.2-.2-3.32.34-5.56-.94-1.65-.94-5.06-4.83-4.44-7.06,5.86,1.31,46.32-1.72,48,0Z\"/><circle class=\"st0\" cx=\"290.19\" cy=\"402.22\" r=\"4.78\"/></g><g><g><path class=\"st0\" d=\"M126.08,281.35c-1.37,32.38,6.74,64.13,6.05,96.55-3.95,27.58-4.84,55.6-7.05,83.45h-19c.2-2.57,1.06-4.83,1.08-7.48.31-29.1,5.35-58.62,5.96-87.98.36-17.63-5.86-37.21-7.03-55.05-.64-9.81.16-19.77.99-29.49h19ZM110.2,310.48c-1.67,2.55,6.8,46.21,5.01,53.23.78,2.38,13.65,3.15,13.89-.85l-6.17-52.87c-.45-3.52-12.28-.2-12.73.48ZM125.08,439.35h-15l-1.01,17.01c2.96-.54,11.07.95,13.07-.44,1.23-.86,1.2-13.51,2.94-16.56Z\"/><path class=\"st0\" d=\"M118.08,278.35c-1-.03-2.01.04-3,0,1.02-38.97-11.68-76.89-9-116.01h20c-2.34,29.19,7.4,57.67,9.04,86.46.92,16.21.14,34.49-1.13,49.94-.36,4.41-1.6,8.92-.92,13.6-3.46-3.08-1.96-11.31-1.99-16-.01-2-.04-4.01,0-6,.06-2.66-.02-5.34,0-8,0-.18,1.06-1.55,1.07-3.38.22-28.35-4.68-55.76-9.12-83.57l-11.96-.06c-.08,27.82,8.74,55.03,7.01,83.01Z\"/><path class=\"st0\" d=\"M118.08,158.35c-1-.03-2.01.04-3,0,.19-9.16-.16-18.38-1-27.5-1.54-16.58-5.44-33.58-6.99-50.01-.54-5.71-2.54-35.56.92-38.06,2.97-.57,18.51-1.33,19.11,1.23,1.52,6.51-.45,22.83-.08,30.88,1.58,34.79,11.76,70.64,7.95,105.87-.1.97-.44,3.76-1.9,3.58-1.51-7.95-.69-15.97-1.01-24-1.13-28.23-5.33-52.15-7.99-79.51-1.21-12.47,3.04-15.24-14.06-10.93l8.05,88.44Z\"/><path class=\"st0\" d=\"M68.08,448.35c-1.35-6.37,5.43-8.65,8.44-13.06,6.73-9.87,7.61-36.25,10.88-49.12,3.8-14.97,6.38-16.72,22.69-15.82v5.01c-5.49.42-11.79-1.67-16.05,2.7-5.04,15.28-4.98,31.94-9.44,47.31-1,3.46-7.68,16.53-7.51,17.47.48,2.65,9.35-.32,11.52-.46,5.43-.34,14.05-.74,15.49,5.98h-36Z\"/><path class=\"st0\" d=\"M120.08,39.35c-1.32-.1-2.68.08-4,0,.91-9.96-1.19-21.85-.05-31.56.12-1.01.46-3.45,1.55-3.45h19.5v95l-1.99-16.51c.55-13.53-1.24-27.23-2.01-40.49-.64-10.98-1.55-21.93-.99-33.01h-12.01v30.01Z\"/></g><g><path class=\"st0\" d=\"M473.03,281.4c2.69,13.77.32,27.7-.94,41.46-1.25,13.55-5.97,32.12-6.05,43.94-.15,22.79,4.47,50.3,6.92,73.16.75,7.01.5,14.64,2.12,21.37l-20,1.01c-.18-3.8.28-7.69,0-11.5-2.01-26.51-7.66-53.45-8.03-79.97-.27-19.51,5.83-38.63,7.03-58.05.67-10.82-.24-21.75-.99-32.49l19.95,1.06ZM469.08,309.35c-4.13.47-9.68-1.8-11.75,2.76-1.4,3.09-2.55,12.88-3.13,16.87-1.79,12.37-1.9,25.05-4.12,37.37,2.92-.57,12.86,1.52,13.85-1.64,1.32-18.6,6.64-36.58,5.15-55.36ZM472.08,457.35c-.33-3.25-1-17.19-2.94-18.56s-10.1.09-13.06-.44l2,19h14Z\"/><path class=\"st0\" d=\"M447.08,165.35c-.05,1.52,1.08,3.93,1.03,6.45-.08,4.29-2.03,10.04-2.04,14.55-1.35-.17-1.75-1.36-1.95-2.54-1.82-10.73-.79-41.03-.08-53,1.06-18.07,5.42-37.76,7.03-55.97.88-9.92,1.06-20.02,1.01-29.99-.03-.82.94-2.5,1.5-2.5h18.5c3.84,38.26-7.31,76.26-8.95,114.45-.31,1.2-2.17.3-3.05.55l7-86c-2.1.29-6.5-.69-8.07.44-1.95,1.4-8.14,41.67-8.8,47.19-1.86,15.34-2.59,30.92-3.13,46.37Z\"/><path class=\"st0\" d=\"M448.08,279.35c-.1,4.76.63,11.01-.05,15.45-.32,2.13-3.06,4.42-1.96,7.54-1.68,0-1.9-3.33-1.99-4.49-.35-4.64.97-7.99,1.04-11.97.25-13.43-.89-27.77-.03-41.03,1.3-20.08,6.78-40.87,8.03-61.97.22-3.7-.99-19.8.9-21.1,1.52-1.06,9.88-.34,12.61-.39,3.68-.07,5.92-2.95,6.51,2.4,2.58,23.68-4.89,54.06-7.04,78.06-.45,4.98-.67,34.87-2.03,36.48-.99.11-1.99-.02-2.98,0-1.14-27.93,5.87-55.26,8-83-4.4,0-8.77.4-13-1.01-2.72,18.98-6.9,38.32-8,57.51-.51,8.97.17,18.44,0,27.49Z\"/><path class=\"st0\" d=\"M514.08,448.35h-38v-5h26c-2.48-10.25-6.9-18.43-9.32-29.18-2.12-9.47-2.92-26.75-6.45-34.55-2.88-6.37-11.72-3.78-17.23-4.27-2.13-6.05,10.11-7.55,13.23-6.82,4.42,1.04,7.83,6.99,9.18,10.94,5.51,16.13,2.93,38.46,11.1,53.88,3.02,5.69,9.8,8.58,11.49,15.01Z\"/><path class=\"st0\" d=\"M460.08,40.35V10.35c-3.09,1.18-14.22-2.03-15.55-.05.38,19.17-2.27,39.02-1.45,58.05.03.66-.04,1.34,0,2-1.68,1.09-.97,4.11-1,6-.03,2,0,4,0,6h-1c.36-23.04-2.61-53.72-.05-75.55.12-1.01.46-3.45,1.55-3.45h16c7.56,0,3.59,11.13,3.46,15.46-.16,5.59.93,14.03.03,19.04-.24,1.34-.57,2.16-1.99,2.5Z\"/></g></g></g>"
}

// SVG Art Constants - Sword
fn get_sword_svg() -> ByteArray {
    "<defs><style>.cls-1{fill:#52a2b0;}.cls-2{fill:#8cdeeb;}</style></defs><g><path class=\"cls-2\" d=\"M32,54c2.28.29,5.19-.48,7.32.02.75.18.63,1.79,1.36,1.96,25.55,5.77,54.04,9.73,81.32,13.02,5.33.64,10.64,1.45,16,2,.19.02,1.13.91,2.42,1.04,7.57.8,15.49.33,23,1.82,1.61-.47,1.25-1.79,1.58-2.86,1.13-3.64,1.14-7.17,3-11,3.46-.41,1.41,1.08,1.3,2.79-.16,2.4-.58,4.79-.29,7.21l7.98-5.99c.38,2.08-.53,12.34.06,12.95,1.43,1.47,18.79.55,23.38,2.12,2.92,1,3.88,3.35,7.13,3.87,7.61,1.22,19.32.56,27.44,1.06.66.04,1.34-.04,2,0,33.33,1.98,65.47,4.22,99,4,.67,0,1.33,0,2,0,1.04,1.66,3.79,1,5.49,1.02,32.11.4,64.45-2.16,96.51-4.02,6.34-.37,12.66-.56,19-1,27.9-1.95,55.4-4.85,83-8,.33-.04.67.04,1,0,38.62-4.44,76.15-9.84,114-17,.61-.12,1.37.1,2,0,2.26.72-.13,2.85-.96,3.54-1.8,1.49-4.1,2.11-5.56,3.44-1.36,1.24-2.01,3.32-3.43,4.57-6.37,5.61-14.97,9.91-23.05,12.47l3.99,2.97-5.99,3.01c-13.15,2.67-26.73,4.99-40,7-27.43,4.16-58.98,4.95-84.69,10.98-2.92.68-11.26.63-15.31,1.02-1.31.13-2.69-.12-4,0l-4,1c-7.77.71-16.24.46-24,1l-2,1c-.33.02-.67-.02-1,0-9.86.61-19.61.88-29.51.98-1.69.02-4.45-.64-5.49,1.02-2.77-.19-7.36-.35-10,0l-3,1c-.79.14-1.89.77-3,1-1.66-1.78-5.5-.98-8-1-5.97-.05-12.03-.14-18,0-3.46.08-8.16,1-10.5,1h-45c-1.94,0-6.41-.89-9.5-1-4.64-.16-9.36.21-14,0l-4-1c-2.65-.12-5.35.14-8,0-31.79-1.62-62.11-5.17-94-4-3.32.12-6.68-.09-10,0,.67,6.4-3.71,21.43-12.28,16.78-4.44-2.41-3.43-7.58-3.72-11.78-.18-2.55,1.03-8-1.64-8.86-2-.65-5.27.11-7.74-.26-11.57-1.76-23.09-4-34.63-5.87-4.94-.8-48-9-48-9-13.47-3.15-27.13-5.55-40.56-8.94-7.67-4.14-4.66-21.67,1.04-26.12.93-.73,1.96-.62,2.52-.94ZM42,58.02c-.14-.15-3.77-1.21-3.99-1.02l-1,6c.71.8,5.93-3.94,4.99-4.98ZM36,58.01c-8.46-3.02-11.5,11.66-9.8,17.3.7,2.32,4.55,3.98,6.8,3.69-1-7.84.97-13.71,3-20.99ZM45.01,80c5.7-4.07,8.05-10.96,3.49-16.98-6.98,5-5.62,9.66-3.49,16.98ZM35.01,72c3.79.73,5.51-6.37,2.48-6.99s-2.66,5.18-2.48,6.99ZM61.99,65c-1.49-1.12-6.59,6.69-6.74,7.66-.18,1.15,3.32,11.33,4.26,11.32,7.81-6.06,5.24-11.02,2.49-18.98ZM74.28,68.31c-.55.52-5.23,7.72-5.28,8.21-.17,1.63,2.02,11.13,3.51,11.48,1.78.42,7.31-7.53,7.45-9.54.08-1.13-1.93-9.61-2.47-10.46-.87-1.39-2.44-.43-3.22.31ZM90.99,69c-1.87-1.39-7.56,8.18-7.81,9.7-.2,1.22,2.35,10.97,2.83,11.29,2.48,1.68,7.58-6.43,7.96-8.56.35-1.98-2.18-11.84-2.98-12.44ZM636.51,71.02l-1.49,1.49c-.02,1.05,2.5-.59,1.49-1.49ZM104.02,72.01c-.44.31-4.92,8.93-4.95,9.46-.06,1.23,3.54,11.52,4.43,11.51,2.61-2.58,6.43-6.71,6.58-10.5.09-2.36-3.34-12.41-6.06-10.47ZM634.26,73.98c0-.68-.55-1.23-1.23-1.23s-1.23.55-1.23,1.23.55,1.23,1.23,1.23,1.23-.55,1.23-1.23ZM118.99,96.99c0-3.93,6.51-8.37,6.81-11.65.08-.91-3.34-10.88-4.31-11.34l-4.89,5.09-2.59,4.46,4.98,13.44ZM630.99,75c-21.78,7.21-45.81,10.71-68.62,13.87-119.3,16.49-239.76,18.22-359.88,9.14-1.56-.12-4.26-.46-5.49.48,1.05,1.19,1.83,2.17,3.51,2.49,11.63,2.18,28.69,1.37,40.97,2.03,104.93,5.62,210.49,2.88,314.88-11.14,18.19-2.44,57.4-6.94,72.62-14.43,1.43-.7,2.51.23,2-2.44ZM133.01,96c1.64,1.21,6.59-7.43,6.83-8.73.31-1.71-2.22-11.26-3.35-11.24-1.62,2.17-5.9,6.25-6.35,8.71-.31,1.71,2.15,10.74,2.86,11.26ZM160.99,103l2.06-24.47c-.33-2.44-1.78-2.81-4.05-2.53.73,6.73-4.72,19.46-3.06,25.39.26.94,3.96,1.35,5.05,1.61ZM149.99,80c-6.43,4.16-5.63,11.28-1.49,16.98,6.67-5.4,3.04-10.2,1.49-16.98ZM195,105v-17.5c0-.37-1.13-3.33-1.69-3.52-2.85-.98-16.83-2.54-19.74-2.04-2.22,3.45-4.17,19.86-1.64,21.62,1.54,1.07,19.55.9,23.06,1.44ZM166.99,115.99c-3.69-3.79-5.61,9.47,1.49,8.01,3.1-.64-.8-3.54-1.25-4.78-.37-.99-.11-3.11-.23-3.23Z\"/><path class=\"cls-1\" d=\"M449,111c-1.47,2.91-1.29,9.98,2.75,7.64.2-.12,2.1-4.24,3.22-.08,1.45,5.37-8.62,6.19-10.76-1.31-1.17-4.12,1.9-4.81-5.22-4.26,1.03,9.86-3.7,2.75-7.54,2.05-4.27-.78-13.01-1.73-17.46-2.04,1.04-1.66,3.8-1,5.49-1.02,9.91-.1,19.65-.37,29.51-.98Z\"/><path class=\"cls-1\" d=\"M630.99,75c.51,2.67-.57,1.74-2,2.44-15.22,7.49-54.43,11.98-72.62,14.43-104.39,14.02-209.95,16.76-314.88,11.14-12.28-.66-29.35.15-40.97-2.03-1.68-.32-2.47-1.3-3.51-2.49,1.23-.95,3.93-.6,5.49-.48,120.13,9.09,240.58,7.35,359.88-9.14,22.81-3.15,46.84-6.66,68.62-13.87Z\"/><path class=\"cls-1\" d=\"M195,105c-3.51-.53-21.52-.36-23.06-1.44-2.53-1.76-.58-18.18,1.64-21.62,2.9-.5,16.89,1.06,19.74,2.04.56.19,1.69,3.15,1.69,3.52v17.5Z\"/><path class=\"cls-1\" d=\"M36,58.01c-2.03,7.28-4,13.15-3,20.99-2.25.3-6.1-1.37-6.8-3.69-1.7-5.64,1.34-20.32,9.8-17.3Z\"/><path class=\"cls-1\" d=\"M160.99,103c-1.09-.27-4.79-.67-5.05-1.61-1.66-5.92,3.79-18.66,3.06-25.39,2.26-.28,3.72.09,4.05,2.53l-2.06,24.47Z\"/><path class=\"cls-1\" d=\"M35.01,72c-.18-1.81-.53-7.6,2.48-6.99s1.31,7.72-2.48,6.99Z\"/><path class=\"cls-1\" d=\"M657,59c-37.85,7.16-75.38,12.56-114,17,4.12-9.97,10.1-5.8,18.06-7.44,3.44-.71,15.93-6.94,16.8-10.28.77-2.95-2.21-4.9.09-8.83,1.04-1.78,16.9-14.98,18.58-15.42,9.28-2.39-1.9,5.82-2.22,6.28-4.89,6.82,4.41,16.05-1.78,21.73-1.54,1.41-4.15,1.22-4.53,2.96,4.06-1.93,11.33,2.2,13.41,2.04,1.03-.08,17.25-4.54,19.82-5.3,9.32-2.74,5-9.36,5.99-15.99.75-5,6.56-11.61,11.52-12.54,5.69-1.07,13.64,4.49,15.26-5.2,2.74.99-.26,5.89-1.45,7.05-4.78,4.66-12.54-.22-11.64,8.47.29,2.75,2.37,5.04,4.8,6.23,5.26,2.58,16.76-3.14,11.27,9.24Z\"/><path class=\"cls-1\" d=\"M237,84c.41-4.42-2.2-10.75,4.36-6.86,1.52.9,7.46,8.15,8.63,6.86-.36-2.41-.38-6.07-1.06-8.25-.4-1.29-3.89-.72-.35-6.66.82-1.38,13.02-11.93,14.86-13.13,1.23-.8,1.99-1.23,3.54-.95-1.45,7.38-2.19,21.77,6.26,25.23,8.01,3.28,8.78-2.96,12.45-4.04,2.43-.71,5.29.2,7.76-.24,2.27-.4,3.58-2.83,5.86-2.72,4.15.2,10.34,4.76,15.44,5.5,9.41,1.36,17.5-3.09,21.24,9.26-33.53.22-65.67-2.02-99-4Z\"/><path class=\"cls-1\" d=\"M122,69c-27.28-3.28-55.77-7.25-81.32-13.02-.73-.16-.61-1.78-1.36-1.96-2.12-.5-5.03.27-7.32-.02,1.36-.78,3.52-.97,3.78-1.2.84-.74.79-5.26,1.32-5.71,1.47-1.25,11.98,2.31,10.34-4.99-.72-3.21,5.63,1.13,6.46,2.49,2.08,3.44.03,6.7,5.15,9.85,2.64,1.63,5.39,1.99,8.51,1.63,1.43-.17,2.69-3.78,4.43-2.08,1.03,1-2.78,9.27,5,8.01-.4-8.03,3.18-5.84,7.75-7.77,4.19-1.76,5.6-7.04,5.26-11.24,3.79-.15,4.41,5.81,7.71,6.8,3.62,1.09,7.47-.59,8.13-4.54.25-1.49-2.39-9.46.64-8.25,6.1,2.44,1.99,11.89,4,16,1.32,2.69,13.02,8.65,11.51,15.99Z\"/><path class=\"cls-1\" d=\"M459,84c-3.67-4.34-1.04-10.68,2.5-4,1.73-1.83,3.93-6.94,6.95-5.98,1.17.37,1.29,2.61,1.68,2.84,1.65,1,9.28-3.86,11.63-4.61,7.21-2.29,16.2-2.94,23.31-4.69,3-.74,5.69-3.05,8.49-3.5,5.18-.83,12.08,1.13,17.99.97,4.64-.12,10.72-1.42,15.45-2.03-.09,4.42-4.36,5.9-6.22,10.27-.81,1.91-1.86,3.08,1.23,2.72-27.6,3.15-55.1,6.05-83,8Z\"/><path class=\"cls-1\" d=\"M338,88c5.55-.05,19.04,1.08,23.3.02.5-.12,4.82-6.27,7.4-6.86,1.76-.4,4.37,1.21,7.55.64,5.54-1.01,11.02-8.88,20.25-8.88,7.68,0,7.87,8.01,13.47,9.68,3.11.93,9.86-1.32,14.48-.55,1.16.19,9.31,5.16,9.56,2.44.57-6.39-10.07-6.31-14-6.99,2.82-3.16,8.3-3.1,12.11-2.07.35.09,5.68,3.75,5.94,4,1.39,1.39,1.98,3.63,1.95,5.57-32.06,1.85-64.4,4.42-96.51,4.02-1.69-.02-4.45.64-5.49-1.02Z\"/><path class=\"cls-1\" d=\"M168,60c.29-.59-.09-1.89.93-2.52,2.8-1.74,10.07.52,10.07,3.02v14.5c5.7.73,12.81,1.86,18.46,2.04s10.69-1.69,16.54-.05c1.87-5.5-4.48-6.6-5.98-10.51-1.33-3.48,3.34.22,3.71.3,6.45,1.28,12.94-1.15,17.13,5.86,1.07,1.79,1.19,4.02,2.16,5.64.75,1.26,4.23,2.76,3.99,5.72-8.13-.5-19.83.16-27.44-1.06-3.25-.52-4.21-2.87-7.13-3.87-4.59-1.57-21.94-.65-23.38-2.12-.59-.61.33-10.87-.06-12.95l-7.98,5.99c-.29-2.42.13-4.81.29-7.21.11-1.71,2.16-3.2-1.3-2.79Z\"/></g>"
}

// SVG Art Constants - Occlusion (overlay mask)
fn get_occlusion_svg() -> ByteArray {
    "<g id=\"_2JLexQ.tif\" data-name=\"2JLexQ.tif\"><g><path fill=\"#e9283a\" d=\"M45.96,23.81c-.29-5.71-.87-11.39-1.82-17.03-10.82-.1-23.59,0-32.48.12.42,5.78.82,11.37,1.17,16.91h33.13Z\"/></g></g>"
}

// SVG Art Constants - Purple/Magenta Glow (appears when fully forged)
fn get_yellow_glow() -> ByteArray {
    "<defs><radialGradient id=\"purpleGlow\" cx=\"50%\" cy=\"50%\"><stop offset=\"0%\" style=\"stop-color:#FF00FF;stop-opacity:0.8\" /><stop offset=\"30%\" style=\"stop-color:#C71585;stop-opacity:0.5\" /><stop offset=\"70%\" style=\"stop-color:#8B008B;stop-opacity:0.2\" /><stop offset=\"100%\" style=\"stop-color:#8B008B;stop-opacity:0\" /></radialGradient></defs><ellipse cx=\"512.5\" cy=\"675\" rx=\"180\" ry=\"120\" fill=\"url(#purpleGlow)\" opacity=\"0.9\"/>"
}

// Helper functions to generate swords with transforms at specific Y offsets
fn get_sword_waza() -> ByteArray {
    let mut result: ByteArray = "<g transform=\"translate(135, 240)\">";
    result.append(@get_sword_svg());
    result.append(@"<g transform=\"translate(175, 100)\">");
    result.append(@get_occlusion_svg());
    result.append(@"</g><g transform=\"translate(520, 90)\">");
    result.append(@get_occlusion_svg());
    result.append(@"</g></g>");
    result
}

fn get_sword_chi() -> ByteArray {
    let mut result: ByteArray = "<g transform=\"translate(135, 360)\">";
    result.append(@get_sword_svg());
    result.append(@"<g transform=\"translate(175, 100)\">");
    result.append(@get_occlusion_svg());
    result.append(@"</g><g transform=\"translate(520, 90)\">");
    result.append(@get_occlusion_svg());
    result.append(@"</g></g>");
    result
}

fn get_sword_shin() -> ByteArray {
    let mut result: ByteArray = "<g transform=\"translate(135, 480)\">";
    result.append(@get_sword_svg());
    result.append(@"<g transform=\"translate(175, 100)\">");
    result.append(@get_occlusion_svg());
    result.append(@"</g><g transform=\"translate(520, 90)\">");
    result.append(@get_occlusion_svg());
    result.append(@"</g></g>");
    result
}

// Main SVG generation function
// Generates a complete SVG based on trial progress
pub fn generate_svg(progress: TrialProgress) -> ByteArray {
    let mut svg: ByteArray = "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1025 1024' width='100%' height='100%'>";

    // Add background
    svg.append(@get_bg_svg());

    // Add background glow if all trials are complete
    if progress.waza_complete && progress.chi_complete && progress.shin_complete {
        svg.append(@get_yellow_glow());
    }

    // Add rack (weapon stand)
    svg.append(@get_rack_svg());

    // Add swords based on completion status
    // Top sword (Waza) - align with top rack slot
    if progress.waza_complete {
        svg.append(@get_sword_waza());
    }

    // Middle sword (Chi) - align with middle rack slot
    if progress.chi_complete {
        svg.append(@get_sword_chi());
    }

    // Bottom sword (Shin) - align with bottom rack slot
    if progress.shin_complete {
        svg.append(@get_sword_shin());
    }

    svg.append(@"</svg>");

    // Return as data URI
    let mut data_uri: ByteArray = "data:image/svg+xml;utf8,";
    data_uri.append(@svg);
    data_uri
}
